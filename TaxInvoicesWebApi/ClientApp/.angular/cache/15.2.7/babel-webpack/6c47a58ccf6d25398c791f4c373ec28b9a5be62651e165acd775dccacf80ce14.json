{"ast":null,"code":"export function integerValidator() {\n  return control => {\n    const valid = Number.isInteger(Number(control.value));\n    return valid ? null : {\n      'notInteger': {\n        value: control.value\n      }\n    };\n  };\n}\nexport function formatPrice(price) {\n  return price.toLocaleString('es-CO', {\n    style: 'decimal',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n}","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,gBAAgB;EAC9B,OAAQC,OAAwB,IAAmC;IACjE,MAAMC,KAAK,GAAGC,MAAM,CAACC,SAAS,CAACD,MAAM,CAACF,OAAO,CAACI,KAAK,CAAC,CAAC;IAErD,OAAOH,KAAK,GAAG,IAAI,GAAG;MAAE,YAAY,EAAE;QAAEG,KAAK,EAAEJ,OAAO,CAACI;MAAK;IAAE,CAAE;EAClE,CAAC;AACH;AAEA,OAAM,SAAUC,WAAW,CAACC,KAAa;EACvC,OAAOA,KAAK,CAACC,cAAc,CAAC,OAAO,EAAE;IAAEC,KAAK,EAAE,SAAS;IAAEC,qBAAqB,EAAE,CAAC;IAAEC,qBAAqB,EAAE;EAAC,CAAE,CAAC;AAChH","names":["integerValidator","control","valid","Number","isInteger","value","formatPrice","price","toLocaleString","style","minimumFractionDigits","maximumFractionDigits"],"sourceRoot":"","sources":["C:\\Users\\Carlos Morales\\Documents\\dev\\TEST\\TaxInvoicesWebApi\\TaxInvoicesWebApi\\ClientApp\\src\\app\\utils.ts"],"sourcesContent":["import { AbstractControl, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function integerValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const valid = Number.isInteger(Number(control.value));\r\n\r\n    return valid ? null : { 'notInteger': { value: control.value } };\r\n  };\r\n}\r\n\r\nexport function formatPrice(price: number): string {\r\n  return price.toLocaleString('es-CO', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}