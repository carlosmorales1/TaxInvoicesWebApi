{"ast":null,"code":"export function integerValidator() {\n  return control => {\n    const valid = Number.isInteger(Number(control.value));\n    return valid ? null : {\n      'notInteger': {\n        value: control.value\n      }\n    };\n  };\n}","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,gBAAgB;EAC5B,OAAQC,OAAwB,IAAmC;IACjE,MAAMC,KAAK,GAAGC,MAAM,CAACC,SAAS,CAACD,MAAM,CAACF,OAAO,CAACI,KAAK,CAAC,CAAC;IAErD,OAAOH,KAAK,GAAG,IAAI,GAAG;MAAE,YAAY,EAAE;QAAEG,KAAK,EAAEJ,OAAO,CAACI;MAAK;IAAE,CAAE;EAClE,CAAC;AACH","names":["integerValidator","control","valid","Number","isInteger","value"],"sourceRoot":"","sources":["C:\\Users\\Carlos Morales\\Documents\\dev\\TEST\\TaxInvoicesWebApi\\TaxInvoicesWebApi\\ClientApp\\src\\app\\utils.ts"],"sourcesContent":["import { AbstractControl, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function integerValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      const valid = Number.isInteger(Number(control.value));\r\n  \r\n      return valid ? null : { 'notInteger': { value: control.value } };\r\n    };\r\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}