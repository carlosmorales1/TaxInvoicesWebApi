{"ast":null,"code":"export class CreateInvoiceComponent {\n  constructor() {\n    this.products = []; // You will store the products here\n  }\n\n  addProduct() {\n    // Implement logic to add a new product to the list\n    const newProduct = {\n      name: 'New Product',\n      unitPrice: 0,\n      quantity: 0,\n      imageUrl: 'path_to_image.png'\n    };\n    this.products.push(newProduct);\n  }\n  calculateSubtotal() {\n    // Implement logic to calculate the subtotal\n    return this.products.reduce((acc, product) => acc + product.unitPrice * product.quantity, 0);\n  }\n  calculateTaxes() {\n    // Implement logic to calculate taxes (19%)\n    return this.calculateSubtotal() * 0.19;\n  }\n  calculateTotal() {\n    // Implement logic to calculate the total\n    return this.calculateSubtotal() + this.calculateTaxes();\n  }\n  saveInvoice() {\n    // Implement logic to save the invoice\n    // You can send the invoice data to a server or perform any necessary actions here\n  }\n}","map":{"version":3,"mappings":"AAcA,OAAM,MAAOA,sBAAsB;EAAnCC;IACE,aAAQ,GAAc,EAAE,CAAC,CAAC;EAgC5B;;EA9BEC,UAAU;IACR;IACA,MAAMC,UAAU,GAAY;MAC1BC,IAAI,EAAE,aAAa;MACnBC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE;KACX;IACD,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACN,UAAU,CAAC;EAChC;EAEAO,iBAAiB;IACf;IACA,OAAO,IAAI,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,CAACR,SAAS,GAAGQ,OAAO,CAACP,QAAQ,EAAE,CAAC,CAAC;EAC9F;EAEAQ,cAAc;IACZ;IACA,OAAO,IAAI,CAACJ,iBAAiB,EAAE,GAAG,IAAI;EACxC;EAEAK,cAAc;IACZ;IACA,OAAO,IAAI,CAACL,iBAAiB,EAAE,GAAG,IAAI,CAACI,cAAc,EAAE;EACzD;EAEAE,WAAW;IACT;IACA;EAAA","names":["CreateInvoiceComponent","constructor","addProduct","newProduct","name","unitPrice","quantity","imageUrl","products","push","calculateSubtotal","reduce","acc","product","calculateTaxes","calculateTotal","saveInvoice"],"sourceRoot":"","sources":["C:\\Users\\Carlos Morales\\Documents\\dev\\TEST\\TaxInvoicesWebApi\\TaxInvoicesWebApi\\ClientApp\\src\\app\\create-invoice\\create-invoice.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-invoice',\r\n  templateUrl: './create-invoice.component.html',\r\n  styleUrls: ['./create-invoice.component.css']\r\n})\r\n\r\ninterface Product {\r\n  name: string;\r\n  unitPrice: number;\r\n  quantity: number;\r\n  imageUrl: string;\r\n}\r\nexport class CreateInvoiceComponent {\r\n  products: Product[] = []; // You will store the products here\r\n\r\n  addProduct() {\r\n    // Implement logic to add a new product to the list\r\n    const newProduct: Product = {\r\n      name: 'New Product',\r\n      unitPrice: 0,\r\n      quantity: 0,\r\n      imageUrl: 'path_to_image.png'\r\n    };\r\n    this.products.push(newProduct);\r\n  }\r\n\r\n  calculateSubtotal() {\r\n    // Implement logic to calculate the subtotal\r\n    return this.products.reduce((acc, product) => acc + product.unitPrice * product.quantity, 0);\r\n  }\r\n\r\n  calculateTaxes() {\r\n    // Implement logic to calculate taxes (19%)\r\n    return this.calculateSubtotal() * 0.19;\r\n  }\r\n\r\n  calculateTotal() {\r\n    // Implement logic to calculate the total\r\n    return this.calculateSubtotal() + this.calculateTaxes();\r\n  }\r\n\r\n  saveInvoice() {\r\n    // Implement logic to save the invoice\r\n    // You can send the invoice data to a server or perform any necessary actions here\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}