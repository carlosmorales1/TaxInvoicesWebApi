{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5258/api';\n  }\n  // Método para realizar una solicitud GET\n  get(endpoint) {\n    const url = `${this.apiUrl}/${endpoint}`;\n    return this.http.get(url);\n  }\n  // Método para realizar una solicitud POST\n  post(endpoint, data) {\n    const url = `${this.apiUrl}/${endpoint}`;\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(url, data, {\n      headers\n    });\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,2BAA2B;EAEJ;EAExC;EACAC,GAAG,CAACC,QAAgB;IAClB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,MAAM,IAAIF,QAAQ,EAAE;IACxC,OAAO,IAAI,CAACF,IAAI,CAACC,GAAG,CAACE,GAAG,CAAC;EAC3B;EAEA;EACAE,IAAI,CAACH,QAAgB,EAAEI,IAAS;IAC9B,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACC,MAAM,IAAIF,QAAQ,EAAE;IACxC,MAAMK,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE;KACjB,CAAC;IACF,OAAO,IAAI,CAACG,IAAI,CAACK,IAAI,CAACF,GAAG,EAAEG,IAAI,EAAE;MAAEC;IAAO,CAAE,CAAC;EAC/C;;AAlBWT,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAU,SAAVV,UAAU;EAAAW,YAFT;AAAM","names":["HttpHeaders","ApiService","constructor","http","get","endpoint","url","apiUrl","post","data","headers","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Carlos Morales\\Documents\\dev\\TEST\\TaxInvoicesWebApi\\TaxInvoicesWebApi\\ClientApp\\src\\app\\api.service.ts"],"sourcesContent":["// api.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = 'http://localhost:5258/api';\n\n  constructor(private http: HttpClient) { }\n\n  // Método para realizar una solicitud GET\n  get(endpoint: string): Observable<any> {\n    const url = `${this.apiUrl}/${endpoint}`;\n    return this.http.get(url);\n  }\n\n  // Método para realizar una solicitud POST\n  post(endpoint: string, data: any): Observable<any> {\n    const url = `${this.apiUrl}/${endpoint}`;\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(url, data, { headers });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}